// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Etudiant
  Formateur
  Admin
  CreateurDeFormation
  Etablissement
}

enum CourseType {
  PDF
  IMAGE
  VIDEO
}

model User {
  id                    Int                   @id @default(autoincrement())
  role                  Role                  @default(Etudiant)
  email                 String                @unique
  password              String
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  resetToken            String?
  resetTokenExpiry      DateTime?
  formateurs            Formateur[]
  Etudiants             Etudiant[]
  CreateursDeFormations CreateurDeFormation[]
  Admins                Admin[]
  Etablissements        Etablissement[]
}

model Formateur {
  id         Int    @id @default(autoincrement())
  speciality String
  User       User   @relation(fields: [userId], references: [id])
  userId     Int
}

model Etudiant {
  id                Int    @id @default(autoincrement())
  NameEtablissement String
  User              User   @relation(fields: [userId], references: [id])
  userId            Int
}

model CreateurDeFormation {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [userId], references: [id])
  userId Int
}

model Admin {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [userId], references: [id])
  userId Int
}

model Etablissement {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [userId], references: [id])
  userId Int
}

model Program {
  id      Int      @id @default(autoincrement())
  name    String
  modules Module[]
}

model Module {
  id        Int      @id @default(autoincrement())
  name      String
  startDate DateTime
  endDate   DateTime
  program   Program  @relation(fields: [programId], references: [id], onDelete: Cascade)
  programId Int
  courses   Course[]
}

model Course {
  id       Int        @id @default(autoincrement())
  title    String
  fileUrl  String // path or URL to uploaded file
  type     CourseType
  module   Module     @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  moduleId Int
}
